"use strict";Object.defineProperty(exports,"__esModule",{value:true});var tslib_1=require("tslib");var Authorizer=function(){function Authorizer(){}Authorizer.updateUserStoreFromSourceOfTruth=function(userStore,trueUser){return tslib_1.__awaiter(this,void 0,void 0,function(){var existingUser,updatedUser;return tslib_1.__generator(this,function(_a){switch(_a.label){case 0:return[4,userStore.get(trueUser.name)];case 1:existingUser=_a.sent();if(!existingUser)return[3,4];updatedUser=existingUser.changeMany({firstName:trueUser.firstName,lastName:trueUser.lastName,status:trueUser.status,roles:trueUser.roles});if(!!updatedUser.equals(existingUser))return[3,3];return[4,userStore.addOrUpdate(updatedUser)];case 2:_a.sent();_a.label=3;case 3:return[2,updatedUser];case 4:return[4,userStore.addOrUpdate(trueUser)];case 5:_a.sent();return[2,trueUser]}})})};Authorizer.prototype.changePassword=function(user,newPassword){return new Promise(function(resolve,reject){reject("Authorizer does not support pass changes")})};Authorizer.prototype.deleteUser=function(user){return new Promise(function(resolve,reject){reject("Authorizer does not support user deletion")})};Authorizer.prototype.addOrUpdateUser=function(user){return new Promise(function(resolve,reject){reject("Authorizer does not support user updates")})};Authorizer.prototype.getUser=function(name){return new Promise(function(resolve,reject){reject("Authorizer does not support get user")})};Authorizer.prototype.getAllUsers=function(){return new Promise(function(resolve,reject){reject("Authorizer does not support get all users")})};Authorizer.prototype.isManagingUsers=function(){return false};Authorizer.prototype.hasAccounts=function(){return false};Authorizer.prototype.applyUserDiff=function(diff){return new Promise(function(resolve,reject){reject("Authorizer does not support applying user diffs")})};Authorizer.prototype.userSize=function(){return new Promise(function(resolve,reject){reject("Authorizer does not support user size")})};Authorizer.prototype.userAuthSize=function(){return new Promise(function(resolve,reject){reject("Authorizer does not support auth size")})};return Authorizer}();exports.Authorizer=Authorizer;