"use strict";Object.defineProperty(exports,"__esModule",{value:true});var tslib_1=require("tslib");var requester_1=require("./requester");var error_1=require("../error/error");var nike_hercules_1=require("@implydata/nike-hercules");var DruidRequester=function(e){tslib_1.__extends(r,e);function r(r){var t=e.call(this,r)||this;t.druidAuth=null;if(r.druidAuth){t.druidAuth=r.druidAuth}return t}r.prototype.druidRequest=function(e,r,t){if(this.druidAuth){var u="Basic "+Buffer.from(this.druidAuth.name+":"+this.druidAuth.pass).toString("base64");if(!e.headers){e.headers={}}e.headers["Authorization"]=u}return this.request(e,r,t,{type:"druid-request"})};r.prototype.tryRequestingMultipleHosts=function(e,r,t,u,n){var s=this;if(n===void 0){n=[]}var i={method:"POST",url:r[0],followAllRedirects:true,timeout:5e3};return this.druidRequest(Object.assign({},i,e),t,u).catch(function(i){if(r.length<=1){var o="Could not request "+r[0]+": "+i.message;if(!n.length)throw new error_1.CloudManagerError(o,i.code);throw new error_1.CloudManagerError(o,500,n.map(function(e){return e.message}).join(", "))}n.push(error_1.CloudManagerError.fromError(i));return s.tryRequestingMultipleHosts(e,r.slice(1),t,u,n)})};r.prototype.populateDataSourceColumns=function(e,r,t,u){var n=r.name;return this.getSegmentMetadata(e,n,t,u).then(function(e){if(!e||!e.length)return r;var t=e[0].columns;var u=Object.keys(t).map(function(e){return{key:e,value:t[e]}});return r.changeColumnsFromSegmentMetadata(u)}).catch(function(e){nike_hercules_1.LOGGER.warn("Error getting "+r.name+" segment metadata: "+e.message);return r})};r.prototype.getSegmentMetadata=function(e,r,t,u){var n=e.getQueryHosts();if(!n.length)return Promise.resolve(null);n=n.map(function(e){return e+"/druid/v2"});return this.tryRequestingMultipleHosts({json:{queryType:"segmentMetadata",dataSource:r,analysisTypes:[],merge:true,lenientAggregatorMerge:true}},n,t,u)};r.prototype.getDataSources=function(e,r,t){var u=e.getQueryHosts();if(!u.length)return Promise.resolve(null);u=u.map(function(e){return e+"/druid/v2/datasources"});return this.tryRequestingMultipleHosts({method:"GET",json:true},u,r,t)};return r}(requester_1.Requester);exports.DruidRequester=DruidRequester;