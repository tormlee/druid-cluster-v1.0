"use strict";Object.defineProperty(exports,"__esModule",{value:true});var tslib_1=require("tslib");var beltful_1=require("@implydata/beltful");var Icons=require("@implydata/little-pictures");var immutable_class_1=require("immutable-class");var plywood_1=require("plywood");var GEO_CODES=require("./geo-codes/index");var granularity_1=require("../granularity/granularity");function typeToKind(e){if(!e)return e;return e.toLowerCase().replace(/_|\//g,"-").replace(/-range$/,"").replace("set-","")}function kindToType(e){if(!e)return e;return e.toUpperCase().replace("SET-","").replace("-GEO","")}var Dimension=function(e){tslib_1.__extends(t,e);function t(t){var r=e.call(this,t)||this;var n=r.name;r.title=t.title||beltful_1.StringUtils.makeTitle(n);r.expression=r.formula?plywood_1.Expression.parse(r.formula):plywood_1.$(n);r.kind=typeToKind(r.type);if(r.geo&&!r.geoEncoding){r.geoEncoding=GEO_CODES.ENCODINGS[0]}if(r.url&&typeof t.url!=="string"){throw new Error("unsupported url: "+t.url+": only strings are supported")}var i=t.granularities;if(i){if(!Array.isArray(i)||i.length!==5){throw new Error("must have list of 5 granularities in dimension '"+t.name+"'")}var u=null;r.granularities=i.map(function(e){if(u===null&&e.expression)u=e.expression.op;if(e.expression&&e.expression.op!==u)throw new Error("granularities must have the same type of actions");return e})}return r}t.isDimension=function(e){return e instanceof t};t.getDimension=function(e,t){if(!t)return null;return immutable_class_1.NamedArray.findByNameCI(e,t)};t.typeToKind=function(e){if(!e)return e;return e.toLowerCase().replace(/_|\//g,"-").replace(/-range$/,"")};t.fromJS=function(e){var r={name:e.name,title:e.title,group:e.group,formula:e.formula||e.expression,type:e.type||kindToType(e.kind),url:e.url};if(!r.type){r.type=(r.formula?plywood_1.Expression.fromJSLoose(r.formula).type:null)||"STRING"}var n=e.granularities;if(n){r.granularities=n.map(function(e){return granularity_1.Granularity.fromJS(e)})}var i=e.bucketedBy;if(i){r.bucketedBy=granularity_1.Granularity.fromJS(i)}var u=e.bucketingStrategy;if(u){r.bucketingStrategy=u}var a=e.sortStrategy;if(a){r.sortStrategy=a}if(e.geo){r.geo=true;if(GEO_CODES.ENCODINGS.includes(e.geoEncoding)){r.geoEncoding=e.geoEncoding}}return new t(r)};t.prototype.toJS=function(){var t=e.prototype.toJS.call(this);if(this.granularities)t.granularities=this.granularities.map(function(e){return e.toJS()});if(this.bucketedBy)t.bucketedBy=this.bucketedBy.toJS();return t};t.prototype.getBucketedBy=function(){return this.bucketedBy||granularity_1.Granularity.NONE};t.prototype.canAutoBucket=function(){var e=this.getBucketingStrategy();return this.isContinuous()&&e!==t.DEFAULT_NO_BUCKET&&e!==t.NEVER_BUCKET};t.prototype.isBucketable=function(){return this.isContinuous()&&this.getBucketingStrategy()!==t.NEVER_BUCKET};t.prototype.getBucketingStrategy=function(){var e=this,r=e.bucketingStrategy,n=e.kind;if(!r&&n==="time")return t.ALWAYS_BUCKET;return r||t.DEFAULT_BUCKET};t.prototype.canHaveNoBucket=function(){return this.getBucketingStrategy()!==t.ALWAYS_BUCKET};t.prototype.isContinuous=function(){var e=this.type;return e==="TIME"||e==="NUMBER"};t.prototype.toEffectiveExpression=function(){return this.expression.cast(this.type)};t.prototype.changeType=function(e){var r=this.valueOf();r.type=e;return new t(r)};t.prototype.getComboType=function(){var e=this,t=e.type,r=e.geo;if(r)return"Geo";return t.toLowerCase().replace(/^\w|\/\w/g,function(e){return e.toUpperCase()})};t.prototype.changeComboType=function(e){var r=this.valueOf();r.geo=false;switch(e){case"Boolean":case"String":case"Set/String":case"Number":case"Time":r.type=e.toUpperCase();break;case"Geo":r.type="STRING";r.geo=true;break}return new t(r)};t.prototype.getFormula=function(){return this.formula||this.expression.toString()};t.prototype.getColumn=function(){if(this.expression instanceof plywood_1.RefExpression){return this.expression.name}return null};t.prototype.changeColumn=function(e){return this.changeFormula(plywood_1.$(e).toString())};t.prototype.getKind=function(){return this.kind};t.prototype.getGranularities=function(e){if(!this.isContinuous())return null;return this.granularities||granularity_1.Granularity.getGranularities(this.getKind(),e,null)};t.prototype.isGeo=function(){return this.geo};t.prototype.isDerived=function(){return!this.expression.equals(plywood_1.$(this.name))};t.prototype.getCoordinatesConverter=function(){if(!this.isGeo())return null;var e=GEO_CODES.getCodes(this.geoEncoding);return function(t){return e[t]}};t.prototype.usesAttribute=function(e){return this.expression.some(function(t){if(t instanceof plywood_1.RefExpression){return t.name===e}else{return null}})};t.prototype.fromColumn=function(){if(this.expression instanceof plywood_1.RefExpression){return this.expression.name}return null};t.prototype.isTime=function(){return this.kind==="time"};t.prototype.isBoolean=function(){return this.kind==="boolean"};t.prototype.guessName=function(){return this.formula.replace(/\W/g,"").substr(0,7)||"dim"};t.prototype.guessTitle=function(){return beltful_1.StringUtils.makeTitle(this.name)};t.prototype.getIcon=function(){if(this.isGeo())return Icons.DIM_GEO;if(this.isTime())return Icons.DIM_TIME;if(this.isContinuous())return Icons.DIM_NUMBER;if(this.isBoolean())return Icons.DIM_BOOLEAN;return Icons.DIM_STRING};t.GEO_ENCODINGS=GEO_CODES.ENCODINGS;t.ALWAYS_BUCKET="alwaysBucket";t.DEFAULT_BUCKET="defaultBucket";t.DEFAULT_NO_BUCKET="defaultNoBucket";t.NEVER_BUCKET="neverBucket";t.COMBO_TYPES_NORMAL=[{label:"Boolean",value:"Boolean"},{label:"String",value:"String"},{label:"Set/String",value:"Set/String"},{label:"Number",value:"Number"},{label:"Time",value:"Time"},{label:"Geo",value:"Geo"}];t.COMBO_TYPES_UNSPLITABLE=[{label:"String",value:"String"},{label:"Number",value:"Number"},{label:"Unique",value:"Unique"},{label:"Theta",value:"Theta"},{label:"Histogram",value:"Histogram"}];t.BUCKETING_STRATEGIES=[{label:"Always bucket",value:t.ALWAYS_BUCKET},{label:"Default bucket",value:t.DEFAULT_BUCKET},{label:"Default donâ€™t bucket",value:t.DEFAULT_NO_BUCKET},{label:"Never bucket",value:t.NEVER_BUCKET}];t.PROPERTIES=[{name:"name",validate:beltful_1.StringUtils.verifyUrlSafeName},{name:"title",defaultValue:null},{name:"group",defaultValue:null},{name:"formula",defaultValue:null},{name:"type"},{name:"url",defaultValue:null},{name:"granularities",defaultValue:[],immutableClassArray:granularity_1.Granularity},{name:"bucketedBy",immutableClass:granularity_1.Granularity,defaultValue:new granularity_1.Granularity({expression:null})},{name:"bucketingStrategy",defaultValue:null,possibleValues:["defaultBucket","defaultNoBucket","neverBucket","alwaysBucket"]},{name:"sortStrategy",defaultValue:null},{name:"geo",defaultValue:false},{name:"geoEncoding",defaultValue:null,possibleValues:GEO_CODES.ENCODINGS}];return t}(immutable_class_1.BaseImmutable);exports.Dimension=Dimension;immutable_class_1.BaseImmutable.finalize(Dimension);