import { BaseImmutable, Property, BackCompat } from './base-immutable';
export interface CarValue {
    name: string;
    fuel: string;
    subCar: Car;
    range?: number;
    relatedCars?: Car[];
    createdOn?: Date;
}
export interface CarJS {
    name: string;
    fuel?: string;
    subCar?: CarJS;
    range?: number;
    relatedCars?: CarJS[];
    createdOn?: Date | string;
}
export declare class Car extends BaseImmutable<CarValue, CarJS> {
    static PROPERTIES: Property[];
    static BACK_COMPATS: BackCompat[];
    static isCar(car: Car): boolean;
    static fromJS(properties: CarJS): Car;
    name: string;
    fuel: string;
    subCar: Car;
    range: number;
    createdOn: Date;
    constructor(properties: CarValue);
    changeFuel: (fuel: string) => this;
    getFuel: () => string;
    getRange: () => number;
    getName: () => string;
    getRelatedCars: () => Car[];
    getSubCar(): Car;
    changeRange(n: number): Car;
}
