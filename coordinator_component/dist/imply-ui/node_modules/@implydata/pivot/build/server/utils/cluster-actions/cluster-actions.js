"use strict";Object.defineProperty(exports,"__esModule",{value:true});var tslib_1=require("tslib");var plywood_1=require("plywood");var plywood_2=require("plywood");var plywood_druid_requester_1=require("plywood-druid-requester");var plywood_mysql_requester_1=require("plywood-mysql-requester");var plywood_postgres_requester_1=require("plywood-postgres-requester");var data_cube_1=require("../../../common/models/data-cube/data-cube");var ClusterActions=function(){function e(e){this.verbose=e.verbose;this.logger=e.logger;this.decorators=e.decorators}e.prototype.makeRequester=function(e,r){var t=this,o=t.logger,s=t.verbose,u=t.decorators;var a=null;if(["druid","druidsql"].includes(e.type)&&e.decorator){if(!u)return Promise.reject(new Error("must have decorators"));var n=u.getDecoratorModule(e.decorator);a=n.druidRequestDecoratorFactory(o,{options:e.decoratorOptions||{},cluster:e})}var i;switch(e.type){case"druid":case"druidsql":i=plywood_druid_requester_1.druidRequesterFactory({host:e.host,timeout:e.getTimeout(),protocol:e.protocol,ca:e.ca,requestDecorator:a,authToken:r,socksHost:e.socksHost,socksUsername:e.socksUsername,socksPassword:e.socksPassword});break;case"mysql":i=plywood_mysql_requester_1.mySqlRequesterFactory({host:e.host,database:e.database,user:e.user,password:e.password});break;case"postgres":i=plywood_postgres_requester_1.postgresRequesterFactory({host:e.host,database:e.database,user:e.user,password:e.password});break;default:throw new Error("unknown cluster type "+e.type)}var c=0;if(c){i=plywood_2.retryRequesterFactory({requester:i,retry:c,delay:500,retryOnTimeout:false})}if(s){i=plywood_2.verboseRequesterFactory({requester:i})}var l=5;if(l){i=plywood_2.concurrentLimitRequesterFactory({requester:i,concurrentLimit:l})}return Promise.resolve(i)};e.prototype.checkConnection=function(e,r){return this.makeRequester(e,r).then(function(r){return plywood_1.External.getConstructorFor(e.type).getVersion(r)})};e.prototype.getSources=function(e,r){return this.makeRequester(e,r).then(function(r){return plywood_1.External.getConstructorFor(e.type).getSourceList(r)})};e.prototype.getAllClusterSources=function(e,r){var t=this;var o=this.logger;return Promise.all(e.map(function(e){return tslib_1.__awaiter(t,void 0,void 0,function(){var t,s,u,a;return tslib_1.__generator(this,function(n){switch(n.label){case 0:t=e.name,s=e.title,u=e.type;return[4,this.getSources(e,r).catch(function(e){o.log("could not get dataSources for cluster "+s+" ["+t+"] because: "+e.message);return[]})];case 1:a=n.sent();return[2,{name:t,title:s,type:u,sources:a}]}})})}))};e.prototype.getAllAttributes=function(e,r,t){return tslib_1.__awaiter(this,void 0,void 0,function(){var o,s,u,a;return tslib_1.__generator(this,function(n){switch(n.label){case 0:return[4,this.makeRequester(e,t)];case 1:o=n.sent();s=data_cube_1.DataCube.fromClusterAndSource("test_cube",e,r).toExternal(e,null,o);return[4,s.introspect({deep:true})];case 2:u=n.sent();a=u.attributes;if(a.length&&a[0].name==="__time"&&a[0].range&&a[0].range.degenerate()){a=a.slice(1)}return[2,a]}})})};return e}();exports.ClusterActions=ClusterActions;