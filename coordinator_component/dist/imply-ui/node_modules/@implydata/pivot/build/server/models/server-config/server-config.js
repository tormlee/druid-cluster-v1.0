"use strict";Object.defineProperty(exports,"__esModule",{value:true});var tslib_1=require("tslib");var path=require("path");var immutable_class_1=require("immutable-class");var state_store_options_1=require("../state-store-options/state-store-options");function basicEqual(e,t){return Boolean(e)===Boolean(t)}var ServerConfig=function(e){tslib_1.__extends(t,e);function t(t){var a=e.call(this,t)||this;a.serverConfigFileDir=t.serverConfigFileDir||process.cwd();if(a.userMode==="ldap-authentication"){if(!a.ldapOptions)throw new Error("ldapOptions must be configured if you have ldap-authentication enabled");if(!a.ldapOptions.url)throw new Error("ldapOptions must include a url")}return a}t.isServerConfig=function(e){return e instanceof t};t.fromJS=function(e,a){if(a===void 0){a={}}if(typeof e.port==="string")e.port=parseInt(e.port,10);if(e.serverRoot&&e.serverRoot[0]==="/")e.serverRoot=e.serverRoot.substr(1);if(typeof e.keepAliveTimeout==="string")e.keepAliveTimeout=parseInt(e.keepAliveTimeout,10);if(e.auth)throw new Error("'auth' is no longer supported");var r=immutable_class_1.BaseImmutable.jsToValue(t.PROPERTIES,e);if(a.serverConfigFilePath){r.serverConfigFileDir=path.dirname(a.serverConfigFilePath)}return new t(r)};t.prototype.valueOf=function(){var t=e.prototype.valueOf.call(this);t.serverConfigFileDir=this.serverConfigFileDir;return t};t.prototype.hasTracking=function(){return Boolean(this.trackingUrl)};t.prototype.needsLogin=function(){var e=this.getUserMode();return["native-users","ldap-authentication"].includes(e)};t.prototype.isStateful=function(){return!this.readOnly};t.prototype.resolvePath=function(e){return path.resolve(this.serverConfigFileDir,e.replace(/\$var/g,this.getResolvedVarDir()).replace(/\$cwd/g,function(){return process.cwd()}))};t.prototype.getResolvedDecorators=function(){var e=this.getDecorators();var t={};for(var a in e){t[a]=this.resolvePath(e[a])}return t};t.prototype.getResolvedVarDir=function(){return path.resolve(this.getVarDir())};t.prototype.getResolvedLicenseFile=function(){return this.resolvePath(this.getLicenseFile())};t.DEFAULT_PORT=9090;t.DEFAULT_SERVER_ROOT="";t.DEFAULT_REQUEST_LOG_FORMAT="common";t.IFRAME_VALUES=["allow","deny"];t.DEFAULT_IFRAME="allow";t.TRUST_PROXY_VALUES=["none","always"];t.DEFAULT_TRUST_PROXY="none";t.STRICT_TRANSPORT_SECURITY_VALUES=["none","always"];t.DEFAULT_STRICT_TRANSPORT_SECURITY="none";t.USER_MODES=["all-users","all-admin","native-users","ldap-authentication","header-user"];t.DEFAULT_USER_MODE="all-admin";t.DEFAULT_QUERY_CACHE_CONFIG={type:"local"};t.PROPERTIES=[{name:"verbose",defaultValue:false},{name:"port",defaultValue:t.DEFAULT_PORT,validate:immutable_class_1.BaseImmutable.ensure.number},{name:"serverHost",defaultValue:null},{name:"serverRoot",defaultValue:t.DEFAULT_SERVER_ROOT},{name:"keepAliveTimeout",defaultValue:null},{name:"requestLogFormat",defaultValue:t.DEFAULT_REQUEST_LOG_FORMAT},{name:"trackingUrl",defaultValue:null},{name:"trackingContext",defaultValue:null,equal:basicEqual},{name:"iframe",defaultValue:t.DEFAULT_IFRAME,possibleValues:t.IFRAME_VALUES},{name:"trustProxy",defaultValue:t.DEFAULT_TRUST_PROXY,possibleValues:t.TRUST_PROXY_VALUES},{name:"strictTransportSecurity",defaultValue:t.DEFAULT_STRICT_TRANSPORT_SECURITY,possibleValues:t.STRICT_TRANSPORT_SECURITY_VALUES},{name:"readOnly",defaultValue:false},{name:"userMode",defaultValue:t.DEFAULT_USER_MODE,possibleValues:t.USER_MODES},{name:"userNameLabel",defaultValue:"Email"},{name:"appName",defaultValue:"Pivot"},{name:"ldapOptions",defaultValue:null},{name:"stateStore",defaultValue:null,immutableClass:state_store_options_1.StateStoreOptions},{name:"sessionStore",defaultValue:null},{name:"sessionSecret",defaultValue:"You are not getting thorough here fool."},{name:"queryCache",defaultValue:t.DEFAULT_QUERY_CACHE_CONFIG},{name:"maxUrlEntries",defaultValue:5e4},{name:"decorators",defaultValue:{},equal:basicEqual},{name:"varDir",defaultValue:"var/pivot"},{name:"licenseFile",defaultValue:"pivot-license"},{name:"cookieMaxAge",defaultValue:2592e6}];return t}(immutable_class_1.BaseImmutable);exports.ServerConfig=ServerConfig;immutable_class_1.BaseImmutable.finalize(ServerConfig);