"use strict";Object.defineProperty(exports,"__esModule",{value:true});var tslib_1=require("tslib");var caladan_1=require("@implydata/caladan");var classNames=require("classnames");var React=require("react");var ReactDOM=require("react-dom");var immutable_utils_1=require("../immutable-utils/immutable-utils");var simpleStringToValue=function(str){return String(str)};var simpleValueToString=function(value){return value?String(value):""};var ImmutableTextInput=function(_super){tslib_1.__extends(ImmutableTextInput,_super);function ImmutableTextInput(){var _this=_super.call(this)||this;_this.hasFocus=false;_this.focusTarget=null;_this.focusAlreadyGiven=false;_this.wasInError=false;_this.triggeredInfoBubble=false;_this.state={};return _this}ImmutableTextInput.simpleGenerator=function(instance,changeFn,labels,errors){return function(name,validator,focusOnStartUp,converters,restrictor,type){if(focusOnStartUp===void 0){focusOnStartUp=false}if(!validator)validator=/^.*$/;if(!converters){converters={stringToValue:simpleStringToValue,valueToString:simpleValueToString}}var myLabels=immutable_utils_1.getLabel(name,labels);return React.createElement(ImmutableTextInput,{key:"input-"+name,instance:instance,path:name,className:name,onChange:changeFn,focusOnStartUp:focusOnStartUp,validator:validator,converters:converters,restrictor:restrictor,infoId:name,helpTitle:myLabels.label,helpText:myLabels.description,errorText:errors[name],type:type})}};ImmutableTextInput.prototype.initFromProps=function(props){if(!props.instance||!props.path)return;var validString;var _a=props.converters,valueToString=_a.valueToString,stringToValue=_a.stringToValue;if(this.state.validString===undefined){validString=valueToString(immutable_utils_1.getProperty(props.instance,props.path))}else{var currentCanonical=valueToString(stringToValue(this.state.validString));var possibleCanonical=valueToString(immutable_utils_1.getProperty(props.instance,props.path));validString=currentCanonical===possibleCanonical?this.state.validString:possibleCanonical}this.setState({myInstance:props.instance,invalidString:undefined,validString:validString})};ImmutableTextInput.prototype.reset=function(callback){this.setState({invalidString:undefined,validString:undefined},callback)};ImmutableTextInput.prototype.componentWillReceiveProps=function(nextProps){var _this=this;if(this.isInfoVisible()||nextProps.errorText){this.updateVisibleHelpText({title:nextProps.helpTitle,infoId:nextProps.path,helpText:nextProps.helpText,errorText:nextProps.errorText})}if(nextProps.instance===undefined){this.reset(function(){return _this.initFromProps(nextProps)});return}if(this.state.invalidString===undefined&&nextProps.instance!==this.state.myInstance){this.initFromProps(nextProps)}};ImmutableTextInput.prototype.componentDidUpdate=function(){this.maybeFocus()};ImmutableTextInput.prototype.componentDidMount=function(){this.initFromProps(this.props);this.maybeFocus()};ImmutableTextInput.prototype.maybeFocus=function(){if(!this.focusAlreadyGiven&&this.props.focusOnStartUp&&this.focusTarget){ReactDOM.findDOMNode(this.focusTarget).select();this.focusAlreadyGiven=true}};ImmutableTextInput.prototype.isValueValid=function(value){var validator=this.props.validator;if(!validator)return true;if(validator instanceof RegExp){return validator.test(value)}if(validator instanceof Function){return!!validator(value)}return true};ImmutableTextInput.prototype.update=function(newString){var _a=this.props,path=_a.path,onChange=_a.onChange,instance=_a.instance,validator=_a.validator,onInvalid=_a.onInvalid,converters=_a.converters,restrictor=_a.restrictor;if(restrictor)newString=restrictor(newString);var myInstance;var invalidString;var validString;var error="";var newValue;try{newValue=converters.stringToValue(newString);if(validator&&!this.isValueValid(newString)){myInstance=instance;invalidString=newString;if(onInvalid)onInvalid(newValue)}else{myInstance=immutable_utils_1.setProperty(instance,path,newValue);validString=newString}}catch(e){myInstance=instance;invalidString=newString;error=e.message;if(onInvalid)onInvalid(newValue)}this.setState({myInstance:myInstance,invalidString:invalidString,validString:validString},function(){if(onChange)onChange(myInstance,invalidString===undefined,path,error)})};ImmutableTextInput.prototype.onChange=function(event){this.update(event.target.value)};ImmutableTextInput.prototype.isInfoVisible=function(){return caladan_1.InfoManager.currentInfo&&caladan_1.InfoManager.currentInfo.sourceId===this.props.infoId};ImmutableTextInput.prototype.updateVisibleHelpText=function(info){var showHelpOnFocus=this.props.showHelpOnFocus;var infoId=info.infoId,title=info.title,errorText=info.errorText,helpText=info.helpText;if(!infoId||!this.hasFocus)return;var inError=!!errorText;if(!showHelpOnFocus&&!inError&&this.wasInError&&this.triggeredInfoBubble){caladan_1.InfoManager.hide(infoId);return}this.wasInError=inError;this.triggeredInfoBubble=!this.isInfoVisible();caladan_1.InfoManager.show({sourceId:infoId,title:title,lines:[helpText,errorText].filter(Boolean),type:inError?"error":"info"})};ImmutableTextInput.prototype.onFocus=function(){var _a=this.props,helpTitle=_a.helpTitle,infoId=_a.infoId,helpText=_a.helpText,errorText=_a.errorText,showHelpOnFocus=_a.showHelpOnFocus;this.hasFocus=true;if(showHelpOnFocus)this.updateVisibleHelpText({title:helpTitle,infoId:infoId,helpText:helpText,errorText:errorText})};ImmutableTextInput.prototype.onBlur=function(){var _a=this.props,infoId=_a.infoId,showHelpOnFocus=_a.showHelpOnFocus;this.hasFocus=false;if(showHelpOnFocus)caladan_1.InfoManager.hide(infoId)};ImmutableTextInput.prototype.render=function(){var _this=this;var _a=this.props,path=_a.path,type=_a.type,className=_a.className;var _b=this.state,myInstance=_b.myInstance,invalidString=_b.invalidString,validString=_b.validString,showingPass=_b.showingPass;var isInvalid=invalidString!==undefined;if(!path||!myInstance)return null;var value=(isInvalid?invalidString:validString)||"";if(type==="textarea"){return React.createElement("textarea",{key:"input-"+path,className:classNames("immutable-text-input",className,{error:isInvalid}),ref:function(c){return _this.focusTarget=c},type:"text",value:value,onChange:this.onChange.bind(this),onFocus:this.onFocus.bind(this),onBlur:this.onBlur.bind(this)})}var getInputType=function(){if(type==="password"||type==="toggleablePass"&&!showingPass)return"password";return"text"};var input=React.createElement("input",{key:"input-"+path,className:classNames("immutable-text-input",className,{error:isInvalid}),ref:function(c){return _this.focusTarget=c},type:getInputType(),value:value,onChange:this.onChange.bind(this),onFocus:this.onFocus.bind(this),onBlur:this.onBlur.bind(this)});if(type==="toggleablePass"){var buttonTitle=showingPass?"Mask Password":"Show Password";var toggleShow=function(){return _this.setState({showingPass:!showingPass})};return React.createElement("div",{key:"input-"+path},input,React.createElement("div",{className:"row",onClick:toggleShow},React.createElement(caladan_1.Button,{type:"light-action",title:buttonTitle,onClick:toggleShow})))}return input};ImmutableTextInput.defaultProps={type:"text",converters:{stringToValue:simpleStringToValue,valueToString:simpleValueToString}};return ImmutableTextInput}(React.Component);exports.ImmutableTextInput=ImmutableTextInput;