"use strict";Object.defineProperty(exports,"__esModule",{value:true});var tslib_1=require("tslib");var Color=require("color");var React=require("react");var ReactDOM=require("react-dom");var transparentColorsCache={};var alphaize=function(e,t){var r=e+"-"+t;if(!transparentColorsCache[r]){transparentColorsCache[r]=Color(e).alpha(t).rgb().toString()}return transparentColorsCache[r]};var ColorMap=function(e){tslib_1.__extends(t,e);function t(){var t=e.call(this)||this;t.state={};return t}t.specialize=function(){return t};t.prototype.getCanvas=function(){return ReactDOM.findDOMNode(this.refs["my-canvas"])};t.prototype.clean=function(){var e=this.getCanvas();e.getContext("2d").clearRect(0,0,e.width,e.height);this.tilesForIndices={}};t.prototype.componentDidMount=function(){if(this.getCanvas()){this.clean();this.draw()}};t.prototype.draw=function(){var e=this.props,t=e.tileHeight,r=e.tileWidth,o=e.tiles,n=e.alpha,a=e.vPadding,i=e.hPadding;var s=this.getCanvas().getContext("2d");var c=function(e){return e.color};if(n){c=function(e){var t=n(e);if(t===1)return e.color;return alphaize(e.color,t)}}var v=o.length;for(var l=0;l<v;l++){var u=o[l];var h=u.columnIndex,p=u.rowIndex;this.tilesForIndices[h+"-"+p]=u;s.fillStyle=c(u);s.fillRect(h*(r+i),p*(t+a),r,t)}};t.prototype.componentDidUpdate=function(){if(this.getCanvas()){this.clean();this.draw()}};t.prototype.getIndicesFromEvent=function(e){var t=this.props,r=t.tileHeight,o=t.tileWidth,n=t.vPadding,a=t.hPadding;var i=e.nativeEvent,s=i.offsetX,c=i.offsetY;var v=Math.floor(s/(o+a));var l=v*(o+a);var u=l+o;if(s<l||s>u)v=-1;var h=Math.floor(c/(r+n));var p=h*(r+n);var d=p+r;if(c<p||c>d)h=-1;return{rowIndex:h,columnIndex:v}};t.prototype.onClick=function(e){var t=this.props,r=t.onClick,o=t.tiles;if(!r)return;var n=this.getIndicesFromEvent(e),a=n.rowIndex,i=n.columnIndex;r(this.tilesForIndices[i+"-"+a],e)};t.prototype.onMouseMove=function(e){var t=this.props,r=t.onMouseMove,o=t.tiles;if(!r)return;var n=this.getIndicesFromEvent(e),a=n.rowIndex,i=n.columnIndex;var s=this.tilesForIndices[i+"-"+a];this.setState({hovered:true});r(s)};t.prototype.onMouseLeave=function(){var e=this.props.onMouseLeave;if(!e)return;this.setState({hovered:false});e()};t.prototype.render=function(){var e=this;var t=this.props,r=t.width,o=t.height,n=t.onMouseMove,a=t.onMouseLeave;var i=this.state.hovered;return React.createElement("canvas",{ref:"my-canvas",className:"color-map "+(i?"actionable":""),onClick:function(t){return e.onClick(t)},onMouseMove:function(t){return e.onMouseMove(t)},onMouseLeave:function(t){return e.onMouseLeave()},width:r,height:o})};t.defaultProps={vPadding:0,hPadding:0};return t}(React.Component);exports.ColorMap=ColorMap;