"use strict";Object.defineProperty(exports,"__esModule",{value:true});var SHA=require("jssha");var bcrypt=require("bcryptjs");var BCRYPT_SALT_ROUNDS=12;var SHA2_SALT="Don't rub salt in your eyes!";function saltedSha2(pass,salt){if(salt===void 0){salt=SHA2_SALT}return sha2(salt+pass)}exports.saltedSha2=saltedSha2;function sha2(input,format){if(format===void 0){format="B64"}var shaObj=new SHA("SHA-256","TEXT");shaObj.update(input);return shaObj.getHash(format)}exports.sha2=sha2;function bcryptCompareSync(pass,hash){return bcrypt.compareSync(pass,hash)}exports.bcryptCompareSync=bcryptCompareSync;function bcryptHashSync(pass,saltRounds){if(saltRounds===void 0){saltRounds=BCRYPT_SALT_ROUNDS}return bcrypt.hashSync(pass,saltRounds)}exports.bcryptHashSync=bcryptHashSync;function bcryptHash(pass,saltRounds){if(saltRounds===void 0){saltRounds=BCRYPT_SALT_ROUNDS}return new Promise(function(resolve,reject){bcrypt.hash(pass,saltRounds,function(err,hash){if(err){reject(err)}else{resolve(hash)}})})}exports.bcryptHash=bcryptHash;function bcryptCompare(pass,hash){return new Promise(function(resolve,reject){bcrypt.compare(pass,hash,function(err,success){if(err){reject(err)}else{resolve(success)}})})}exports.bcryptCompare=bcryptCompare;