"use strict";Object.defineProperty(exports,"__esModule",{value:true});var immutable_store_1=require("@implydata/immutable-store");var chai_1=require("chai");var store_authorizer_1=require("./store-authorizer");var user_auth_1=require("../../models/user-auth/user-auth");var user_1=require("../../../common/models/user/user");var hash_1=require("../../utils/hash/hash");describe("store authorizer",function(){var userAuths=[{name:"user1",pass:"secret1",hashStrategy:"none"},{name:"user3",pass:""+hash_1.bcryptHashSync("secret3"),hashStrategy:"bcrypt"},{name:"user4",pass:""+hash_1.bcryptHashSync("secret4")}].map(function(u){return user_auth_1.UserAuth.fromJS(u)});var users=[{name:"user1"},{name:"user3"},{name:"user4"}].map(function(u){return user_1.User.fromJS(u)});var authorizer=new store_authorizer_1.StoreAuthorizer({authStore:new immutable_store_1.ArrayStore({initArray:userAuths}),userStore:new immutable_store_1.ArrayStore({initArray:users})});it("two-dimensional-base case",function(){return authorizer.checkUser("user1","secret1").then(function(valid){chai_1.expect(valid).to.deep.equal(user_1.User.fromJS({name:"user1"}))})});it("two-dimensional-base case invalid user",function(){return authorizer.checkUser("user1z","america").then(function(valid){chai_1.expect(valid).to.equal(null)})});it("two-dimensional-base case invalid password",function(){return authorizer.checkUser("user1","america").then(function(valid){chai_1.expect(valid).to.equal(null)})});it("works with bcrypt hash strategy",function(){return authorizer.checkUser("user3","secret3").then(function(valid){chai_1.expect(valid).to.deep.equal(user_1.User.fromJS({name:"user3"}))})})});